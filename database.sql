CREATE DATABASE FOOD_RECIPE;
USE FOOD_RECIPE;

-- TABLE FOR USERS
CREATE TABLE USERS (
	USER_ID INT auto_increment PRIMARY KEY,
    USER_FIRST_NAME varchar(100) not null,
    USER_LAST_NAME varchar(100) NOT NULL,
    USER_EMAIL varchar(100) NOT NULL UNIQUE,
    USER_BIRTHDATE date,
    PROFILE_PIC varchar(255),
    GOOGLE_ID varchar(100) NOT NULL unique, -- id được cấp bởi google (?)
    USER_CREATE_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	);

-- TOKEN FOR GOOGLE AUTHENTICATION
CREATE TABLE OAUTH_TOKENS (
	TOKEN_ID INT auto_increment PRIMARY KEY,
    USER_ID INT,
    ACCESS_TOKEN varchar(255) NOT NULL,
    REFRESH_TOKEN VARCHAR(255),
    EXPIRES INT, -- THỜI GIAN HẾT HẠN TOKEN (s)
	foreign key (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
    );

-- TABLE FOR RECIPE
CREATE TABLE RECIPES (
	RECIPE_ID INT auto_increment PRIMARY KEY,
    USER_ID INT,
    TITTLE VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT, -- THÔNG TIN + NGUYÊN LIỆU
    PREP_TIME INT, -- THỜI GIAN CHUẨN BỊ(m)
    COOK_TIME INT, -- THỜI GIAN NẤU (m)
    SERVINGS INT, -- CHO MẤY NGƯỜI
    INSTRUCTION TEXT, -- CÁC BƯỚC THỰC HIỆN
    VIDEO_PATH VARCHAR(255), -- MỖI CÔNG THỨC CÓ 1 VIDEO
    RECIPE_CREATE_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    NOTE TEXT, -- GHI CHÚ NẾU CÓ
    IMG_URL VARCHAR(255),
    foreign key (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
	);
    
    
-- TABLE FOR TAGS (EX: MÓN CHAY, MÓN CÁ, BÁNH NGỌT,...)
CREATE TABLE TAGS(
	TAG_ID INT auto_increment PRIMARY KEY,
    TAG_NAME VARCHAR(50) NOT NULL UNIQUE
    );
    
-- LINK TABLE BETWEEN RECIPE AND TAGS
CREATE TABLE RECIPE_TAG(
	TAG_ID INT,
    RECIPE_ID INT,
    PRIMARY KEY (TAG_ID, RECIPE_ID),
    foreign key (TAG_ID) references TAGS(TAG_ID) ON DELETE CASCADE, 
    foreign key (RECIPE_ID) REFERENCES RECIPES(RECIPE_ID) ON DELETE CASCADE
    );

-- TABLE FOR REVIEW
CREATE TABLE REVIEWS (
	REVIEW_ID INT auto_increment PRIMARY KEY,
    RECIPE_ID INT,
    USER_ID INT,
    RATE INT CHECK (RATE >= 1 AND RATE <= 5),
    COMMENT TEXT,
    REVIEW_CREATE_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (RECIPE_ID) REFERENCES RECIPES(RECIPE_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
    );
    
-- TABLE FOR FAVORITE RECIPE
CREATE TABLE FAVORITE(
	USER_ID INT,
    RECIPE_ID INT,
    FAVORITE_CREATED_AT TIMESTAMP DEFAULT current_timestamp,
    PRIMARY KEY (USER_ID, RECIPE_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (RECIPE_ID) REFERENCES RECIPES(RECIPE_ID) ON DELETE CASCADE
    );

-- TABLE FOR LIKE REVIEW
CREATE TABLE LIKE_REVIEW(
	LIKE_ID INT auto_increment primary key,
    REVIEW_ID INT,
    USER_ID INT,
    LIKE_CREATE_AT timestamp default current_timestamp,
    foreign key (REVIEW_ID) references REVIEWS(REVIEW_ID) ON DELETE CASCADE,
    foreign key (USER_ID) references USERS(USER_ID) ON DELETE CASCADE
);
